import VacationModel from "../models/vacationModels.js";

class VacationController {
    async index(req, res) {
        try {
            // L·∫•y danh s√°ch t·∫•t c·∫£ c√°c k·ª≥ ngh·ªâ t·ª´ c∆° s·ªü d·ªØ li·ªáu
            const vacations = await VacationModel.find();

            // Tr·∫£ v·ªÅ danh s√°ch k·ª≥ ngh·ªâ d∆∞·ªõi d·∫°ng JSON
            res.status(200).json(vacations);
        } catch (error) {
            console.error(error);
            res.status(500).json({ error: "L·ªói trong qu√° tr√¨nh l·∫•y danh s√°ch k·ª≥ ngh·ªâ" });
        }
    }

    async create(req, res) {
        const file = req.files;
        console.log("üöÄ ~ file: vacation.controller.js:19 ~ VacationController ~ create ~ file:", file);
        const { promoter, title, images, description, numberUser, listUser, isPublic, startDay, endDay, milestones } =
            req.body;

        try {
            const newVacation = new VacationModel({
                promoter,
                title,
                images,
                description,
                numberUser,
                listUser,
                isPublic,
                startDay,
                endDay,
                milestones,
            });

            await newVacation.save();

            res.status(201).json(newVacation);
        } catch (err) {
            console.error(error);
            res.status(500).json({ error: "L·ªói trong qu√° tr√¨nh t·∫°o k·ª≥ ngh·ªâ" });
        }
    }

    async update(req, res) {
        const vacationId = req.params.id;
        const { promoter, title, images, description, numberUser, listUser, isPublic, startDay, endDay, milestones } =
            req.body;

        try {
            // C·∫≠p nh·∫≠t th√¥ng tin k·ª≥ ngh·ªâ trong c∆° s·ªü d·ªØ li·ªáu
            const updatedVacation = await VacationModel.findByIdAndUpdate(
                vacationId,
                {
                    promoter,
                    title,
                    images,
                    description,
                    numberUser,
                    listUser,
                    isPublic,
                    startDay,
                    endDay,
                    milestones,
                },
                { new: true } // Tr·∫£ v·ªÅ b·∫£n ghi sau khi ƒë√£ c·∫≠p nh·∫≠t
            );

            res.status(200).json(updatedVacation);
        } catch (error) {
            console.error(error);
            res.status(500).json({ error: "L·ªói trong qu√° tr√¨nh c·∫≠p nh·∫≠t k·ª≥ ngh·ªâ" });
        }
    }

    async remove(req, res) {
        const vacationId = req.params.id;

        try {
            // X√≥a k·ª≥ ngh·ªâ t·ª´ c∆° s·ªü d·ªØ li·ªáu
            await VacationModel.findByIdAndDelete(vacationId);

            res.status(200).json({ message: "K·ª≥ ngh·ªâ ƒë√£ ƒë∆∞·ª£c x√≥a" });
        } catch (error) {
            console.error(error);
            res.status(500).json({ error: "L·ªói trong qu√° tr√¨nh x√≥a k·ª≥ ngh·ªâ" });
        }
    }

    async removeAll(req, res) {
        try {
            // Th·ª±c hi·ªán x√≥a t·∫•t c·∫£ c√°c b·∫£n ghi trong c∆° s·ªü d·ªØ li·ªáu
            await VacationModel.deleteMany({}); // YourModel thay th·∫ø b·∫±ng t√™n model th√≠ch h·ª£p

            return res.status(200).json({ message: "T·∫•t c·∫£ b·∫£n ghi ƒë√£ b·ªã x√≥a." });
        } catch (error) {
            console.error(error);
            return res.status(500).json({ error: "L·ªói trong qu√° tr√¨nh x√≥a b·∫£n ghi." });
        }
    }
}

const vactionController = new VacationController();

export default vactionController;
